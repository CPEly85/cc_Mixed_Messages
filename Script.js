const places = "Afghanistan, Albania, Algeria, Andorra, Angola, Antigua and Barbuda, Argentina, Armenia, Australia, Austria, Azerbaijan, Bahamas, Bahrain, Bangladesh, Barbados, Belarus, Belgium, Belize, Benin, Bhutan, Bolivia, Bosnia and Herzegovina, Botswana, Brazil, Brunei, Bulgaria, Burkina Faso, Burundi, Côte d'Ivoire, Cabo Verde, Cambodia, Cameroon, Canada, Central African Republic, Chad, Chile, China, Colombia, Comoros, Congo (Congo-Brazzaville), Costa Rica, Croatia, Cuba, Cyprus, Czechia (Czech Republic), Democratic Republic of the Congo, Denmark, Djibouti, Dominica, Dominican Republic, Ecuador, Egypt, El Salvador, Equatorial Guinea, Eritrea, Estonia, Eswatini, Ethiopia, Fiji, Finland, France, Gabon, Gambia, Georgia, Germany, Ghana, Greece, Grenada, Guatemala, Guinea, Guinea-Bissau, Guyana, Haiti, Holy See, Honduras, Hungary, Iceland, India, Indonesia, Iran, Iraq, Ireland, Israel, Italy, Jamaica, Japan, Jordan, Kazakhstan, Kenya, Kiribati, Kuwait, Kyrgyzstan, Laos, Latvia, Lebanon, Lesotho, Liberia, Libya, Liechtenstein, Lithuania, Luxembourg, Madagascar, Malawi, Malaysia, the Maldives, Mali, Malta, the Marshall Islands, Mauritania, Mauritius, Mexico, Micronesia, Moldova, Monaco, Mongolia, Montenegro, Morocco, Mozambique, Myanmar (formerly Burma), Namibia, Nauru, Nepal, Netherlands, New Zealand, Nicaragua, Niger, Nigeria, North Korea, North Macedonia, Norway, Oman, Pakistan, Palau, Palestine, Panama, Papua New Guinea, Paraguay, Peru, the Philippines, Poland, Portugal, Qatar, Romania, Russia, Rwanda, Saint Kitts and Nevis, Saint Lucia, Saint Vincent and the Grenadines, Samoa, San Marino, Sao Tome and Principe, Saudi Arabia, Senegal, Serbia, Seychelles, Sierra Leone, Singapore, Slovakia, Slovenia, Solomon Islands, Somalia, South Africa, South Korea, South Sudan, Spain, Sri Lanka, Sudan, Suriname, Sweden, Switzerland, Syria, Tajikistan, Tanzania, Thailand, Timor-Leste, Togo, Tonga, Trinidad and Tobago, Tunisia, Turkey, Turkmenistan, Tuvalu, Uganda, Ukraine, United Arab Emirates, United Kingdom, United States of America, Uruguay, Uzbekistan, Vanuatu, Venezuela, Vietnam, Yemen, Zambia, Zimbabwe"

const placeArr = places.split(', ')

const pokeString = 'Bulbasaur, Ivysaur, Venusaur, Charmander, Charmeleon, Charizard, Squirtle, Wartortle, Blastoise, Caterpie, Metapod, Butterfree, Weedle, Kakuna, Beedrill, Pidgey, Pidgeotto, Pidgeot, Rattata, Raticate, Spearow, Fearow, Ekans, Arbok, Pikachu, Raichu, Sandshrew, Sandslash, Nidoran, Nidorina, Nidoqueen, Nidorino, Nidoking, Clefairy, Clefable, Vulpix, Ninetales, Jigglypuff, Wigglytuff, Zubat, Golbat, Oddish, Gloom, Vileplume, Paras, Parasect, Venonat, Venomoth, Diglett, Dugtrio, Meowth, Persian, Psyduck, Golduck, Mankey, Primeape, Growlithe, Arcanine, Poliwag, Poliwhirl, Poliwrath, Abra, Kadabra, Alakazam, Machop, Machoke, Machamp, Bellsprout, Weepinbell, Victreebel, Tentacool, Tentacruel, Geodude, Graveler, Golem, Ponyta, Rapidash, Slowpoke, Slowbro, Magnemite, Magneton, Farfetch’d, Doduo, Dodrio, Seel, Dewgong, Grimer, Muk, Shellder, Cloyster, Gastly, Haunter, Gengar, Onix, Drowzee, Hypno, Krabby, Kingler, Voltorb, Electrode, Exeggcute, Exeggutor, Cubone, Marowak, Hitmonlee, Hitmonchan, Lickitung, Koffing, Weezing, Rhyhorn, Rhydon, Chansey, Tangela, Kangaskhan, Horsea, Seadra, Goldeen, Seaking, Staryu, Starmie, Mr. Mime, Scyther, Jynx, Electabuzz, Magmar, Pinsir, Tauros, Magikarp, Gyarados, Lapras, Ditto, Eevee, Vaporeon, Jolteon, Flareon, Porygon, Omanyte, Omastar, Kabuto, Kabutops, Aerodactyl, Snorlax, Articuno, Zapdos, Moltres, Dratini, Dragonair, Dragonite, Mewtwo, Mew, Chikorita, Bayleef, Meganium, Cyndaquil, Quilava, Typhlosion, Totodile, Croconaw, Feraligatr, Sentret, Furret, Hoothoot, Noctowl, Ledyba, Ledian, Spinarak, Ariados, Crobat, Chinchou, Lanturn, Pichu, Cleffa, Igglybuff, Togepi, Togetic, Natu, Xatu, Mareep, Flaaffy, Ampharos, Bellossom, Marill, Azumarill, Sudowoodo, Politoed, Hoppip, Skiploom, Jumpluff, Aipom, Sunkern, Sunflora, Yanma, Wooper, Quagsire, Espeon, Umbreon, Murkrow, Slowking, Misdreavus, Unown, Wobbuffet, Girafarig, Pineco, Forretress, Dunsparce, Gligar, Steelix, Snubbull, Granbull, Qwilfish, Scizor, Shuckle, Heracross, Sneasel, Teddiursa, Ursaring, Slugma, Magcargo, Swinub, Piloswine, Corsola, Remoraid, Octillery, Delibird, Mantine, Skarmory, Houndour, Houndoom, Kingdra, Phanpy, Donphan, Porygon2, Stantler, Smeargle, Tyrogue, Hitmontop, Smoochum, Elekid, Magby, Miltank, Blissey, Raikou, Entei, Suicune, Larvitar, Pupitar, Tyranitar, Lugia, Ho-Oh, Celebi, Treecko, Grovyle, Sceptile, Torchic, Combusken, Blaziken, Mudkip, Marshtomp, Swampert, Poochyena, Mightyena, Zigzagoon, Linoone, Wurmple, Silcoon, Beautifly, Cascoon, Dustox, Lotad, Lombre, Ludicolo, Seedot, Nuzleaf, Shiftry, Taillow, Swellow, Wingull, Pelipper, Ralts, Kirlia, Gardevoir, Surskit, Masquerain, Shroomish, Breloom, Slakoth, Vigoroth, Slaking, Nincada, Ninjask, Shedinja, Whismur, Loudred, Exploud, Makuhita, Hariyama, Azurill, Nosepass, Skitty, Delcatty, Sableye, Mawile, Aron, Lairon, Aggron, Meditite, Medicham, Electrike, Manectric, Plusle, Minun, Volbeat, Illumise, Roselia, Gulpin, Swalot, Carvanha, Sharpedo, Wailmer, Wailord, Numel, Camerupt, Torkoal, Spoink, Grumpig, Spinda, Trapinch, Vibrava, Flygon, Cacnea, Cacturne, Swablu, Altaria, Zangoose, Seviper, Lunatone, Solrock, Barboach, Whiscash, Corphish, Crawdaunt, Baltoy, Claydol, Lileep, Cradily, Anorith, Armaldo, Feebas, Milotic, Castform, Kecleon, Shuppet, Banette, Duskull, Dusclops, Tropius, Chimecho, Absol, Wynaut, Snorunt, Glalie, Spheal, Sealeo, Walrein, Clamperl, Huntail, Gorebyss, Relicanth, Luvdisc, Bagon, Shelgon, Salamence, Beldum, Metang, Metagross, Regirock, Regice, Registeel, Latias, Latios, Kyogre, Groudon, Rayquaza, Jirachi, Deoxys, Turtwig, Grotle, Torterra, Chimchar, Monferno, Infernape, Piplup, Prinplup, Empoleon, Starly, Staravia, Staraptor, Bidoof, Bibarel, Kricketot, Kricketune, Shinx, Luxio, Luxray, Budew, Roserade, Cranidos, Rampardos, Shieldon, Bastiodon, Burmy, Wormadam, Mothim, Combee, Vespiquen, Pachirisu, Buizel, Floatzel, Cherubi, Cherrim, Shellos, Gastrodon, Ambipom, Drifloon, Drifblim, Buneary, Lopunny, Mismagius, Honchkrow, Glameow, Purugly, Chingling, Stunky, Skuntank, Bronzor, Bronzong, Bonsly, Mime Jr., Happiny, Chatot, Spiritomb, Gible, Gabite, Garchomp, Munchlax, Riolu, Lucario, Hippopotas, Hippowdon, Skorupi, Drapion, Croagunk, Toxicroak, Carnivine, Finneon, Lumineon, Mantyke, Snover, Abomasnow, Weavile, Magnezone, Lickilicky, Rhyperior, Tangrowth, Electivire, Magmortar, Togekiss, Yanmega, Leafeon, Glaceon, Gliscor, Mamoswine, Porygon-Z, Gallade, Probopass, Dusknoir, Froslass, Rotom, Uxie, Mesprit, Azelf, Dialga, Palkia, Heatran, Regigigas, Giratina, Cresselia, Phione, Manaphy, Darkrai, Shaymin, Arceus'

const pokeArr = pokeString.split(', ')

const actionArr = ['climbing a mountain', 'taking it easy', 'relaxing', 'taking a break', 'resting', 'chilling out', 'rediscovering yourself','thinking about life', 'lost in thought', 'going for a walk','going for a stroll','going for a run','going for a jog','going for a swim','going for a walk','daydreaming','daydreaming about chihuahuas','playing poker','seeing the sights','wild camping','hiking','rambling','getting a cheesburger in','enjoying the sights','enjoying the fresh air','enjoying the scenery','enjoying the break','going for a walk','out for a stroll','out for a run','out for a jog','out for a swim','out for a walk','taking some time','on holiday','visiting friends','on a once in a lifetime holiday','on a wild adventure','on a retreat','on an adventure','on a mystical quest','walking','running','swimming','strolling','adventuring','working','on a secret mission','high off your face','tripping balls','falling asleep','thoroughly confused','shocked and astounded','just getting your bearings','at the end of your first day','at the start of the second year','backpacking','travelling','making it up as you go along','following your insticts','on a hunt','heading out for food','out on your first night','having a coffee','grabbing a sandwich','hailing a cab','walking down the road','praying for sunshine','waiting for a bus','out for the night','holidaying','treating yourself to a holiday','on a long overdue holiday','braving the mosquitoes','out in the heat','trapped in a basement','trapped in the bathroom','hiding','on a project','voluteering','running away from it','making the best of a bad situation','roaming','tracking a Pikachu','updating your Pokedex','wondering what time it is','wondering what is happening','going in circles','out for some exercise','enjoying the sunshine','enjoying the starlight','making friends','calling it a night','just about to fall down a well','checking out the local area','trying to climb the tallest mountain','trying to run a marathon','running a marathon','on an adventure holiday','flying a hot air-balloon','tracking down an old friend','playing pokemon go','hunting pokemon','picking up the pizza','aroused from your sleep','woken with a start','searching for a place to stay','camping','horse-riding','hitch hiking','driving', 'walking the dog', 'wondering what the time is','planning your next adventure','ruing a missed opportunity','stuck','living your best life','out for a beer','walking carefully','running like your life depended on it', 'somewhere', 'trying to work out where you are', 'wondering what to do', 'making plans', 'enjoying your time', 'shopping', 'out shopping', 'trying to sleep', 'trying to relax', 'having an awesome time', 'hoping to get a milkshake', 'reminiscing about the good old days', 'out for a walk with Jonno', 'visiting Jonno', 'walking with Jonno', 'hunting pokemon with Jonno', 'meeting Jonno', 'feeling fantastic','feeling a bit nervous','feeling a bit lost','feeling on top of the world','feeling awesom','loving life',]

const placeModifier = ['','most beautiful', 'northern','southern','western','eastern','central', 'the south of', 'the north of','the west of','the east of','the middle of','your favourite part of','ancient','a dystopian future of','deepest','the most remote part of','in the jungle in','your spiritual home:','a chinese restaurant in','a beautiful part of','the home town of the ruler of', 'the most magnificent part of', 'the most dangerous part of', 'the best party town of', 'the most populated part of', 'the least populated part of', 'the most touristy part of', 'least touristy part of', 'rural', 'urban', 'surburban', 'the hidden kingdom beneath', 'the grasslands of', 'the deepest jungles of', 'pictueresque', 'sunny', 'the capital of', 'the remotest village in', 'the middle of nowhere in', 'no particular rush in', 'a really interesting part of', 'a delightful part of', 'a park in', 'a valley in', 'the grounds of Peters mansion in', 'a secret underground lair in', 'a geostationary orbit above', 'a mysterious part of', 'a relaxed fashion in', 'a mythical woodland in', 'the dying light of', 'the rising sun in', 'the most hidden part of','the most expensive place to live in', 'the most impoverished part of', 'the hidden side of', 'northern-most','southern-most', 'the vast expanse of', 'medieval', 'pre-historic', 'a distant future', 'inner most', 'stunning', 'a mirror image of', 'the booziest part of', 'the most exciting part of', 'the most historic part of', 'the general proximity of', 'a hitherto unvisited part of', 'the middle of the night in', 'the middle of the jungle in', 'the middle of the capital of', 'the middle of the wilderness in', 'the middle of the afternoon in', 'the midday sun in', 'the noon heat in', 'the chill of dawn in', 'a trance-like state in', 'the one and only', 'a non-descript part of', 'god knows where, in', 'a quiet little town in', 'an epic hike accross', 'amazement in', 'the prettiest field in', 'the tiniest field in', 'the largest park in', '', '', '', '' , '' , '' ,'' , '' , '' ]

const adjArr = ['a wild','an angry','a tiny','a tiny little','a feral','a furious','a crazy','a massive','a huge','a large','an elderly','a young','a juvenile','a rare purple','a pygmy','a scared looking','an angry looking','a slightly confused','an unhappy','a friendly','a happy','an exhausted','a vicious','a terrifying','an ill-tempered','a wild','a giant','a sad looking','a murderous','a panicking','a mean looking','a strong looking','a puny looking','a happy looking','a slightly confused looking','a terrifying looking','a dishevelled looking','a sacred', 'a most sacred', 'the biggest','the tiniest','the one and only','the scariest looking','a most untidy','a scruffy looking','an absolutely huge','a bloody enormous','the magnificent','the first ever','the hitherto undiscovered wild','the oldest ever','the oldest ever wild','a lost','a lost wild','a confused and dishevelled looking wild','the most terrifying','the cutest','the custest ever','a totally non-descript','the worlds most dangerous','the worlds most wanted','the worlds most deadliest','the worlds most boring','the worlds funniest','the worlds campest','the worlds most delicious looking','the worlds hungriest','the worlds sleepiest','the worlds most intimidating','the worlds least intimidating','a very well dressed','a completely naked','an angry wild','a tiny wild','a tiny little wild','a furious wild','a crazy looking','a massive wild','a huge wild','a large wild','an elderly wild','a young wild','a juvenile wild','a rare purple wild','a rare pygmy','a scared looking wild','an angry looking wild','a slightly confused wild','an unhappy wild','a friendly wild','a happy wild','an exhausted wild','a vicious wild','a terrifying wild','an ill-tempered wild','a giant wild','a sad looking wild','a murderous wild','a panicking wild','a mean looking wild','a strong looking wild','a puny looking wild','a happy looking wild','a slightly confused looking wild','a terrifying looking wild','a dishevelled looking wild','a sacred wild', 'a most sacred wild', 'the biggest wild','the tiniest wild','the first ever discovered','the scariest looking wild','a most untidy wild','a scruffy looking wild','an absolutely huge','a bloody enormous wild','the magnificent wild','the first ever golde','the hitherto undiscovered mega evolved','the oldest ever recorded wild','a really stoned','a pissed','a drunk wild', 'a drunk','an absolutely smashed', 'a tripping', 'a determined looking wild','the most terrifying wild','the cutest wild','the custest ever wild','a totally non-descript wild','the worlds most dangerous wild','the worlds most wanted fugitive','the worlds deadliest','the worlds most boring wild','the worlds funniest wild','the worlds campest','the worlds most delicious looking wild','the worlds hungriest wild','the worlds sleepiest wild','the worlds most intimidating wild','the worlds least intimidating wild','a very well dressed wild','a completely naked wild', 'a ridiculously dressed', 'a ridiculously rare','the worlds smartest','the worlds most obnoxious', 'an unusually helpful', 'an unusually placid', 'an unusually small', 'an unusually intelligent', 'an unusually angry', 'an unusually sick looking', 'a sick', 'an injured']

const suddArr = ['','suddenly','all of a sudden','out of the blue','before you know it','to your surprise','to your astonishment','incredibly,','amazingly,','in a flash of light,','to your surprise,', 'to everyones amusement,']

const entranceArr = ['appears','appears from nowhere','appears out of the blue','steps into view','appears before you','appears','falls out of a tree','materialises in front of your eyes','jumps out','jumps out behind you','rushes towards you','shows up','attacks','whooshes into existance','falls from the sky','walk into a ber','appears to your left','appears to your right','appears on the horizon','steps out in front of you','steps in to view','introduces itself','laughs maniacally','falls out from its hiding place','announces its prescence','comes out of nowhere','jumps out from its hiding place','jumps out and attacks you','asks you for the time','accosts you','launches a full scale nuclear assault','tries to grab you','surprises you','makes its presence known in dramatic fashion','enters shyly','enters in a dramatic fashion','enters silently','blinks into existance','walks round the corner','nearly walks right into you','bumps right into you','makes your acquaintance','just appears from nowhere','casually strolls up to you','approaches you with a smile on its face','glares at you','launches into battle with you','starts hitting on you','pops out a warp pipe','arrives from a parallel dimension','falls through an interdimensional portal right in front of your eyes','scurries across your path','jumps out and runs in to the distance','comes flying out of nowhere','appears in the corner of your eye','steps out a pub','rides past on a bike','rides past on a elephant','strolls up to you','punches you in the face','pays you a compliment','says hello','walk up','walks up and says hey','appears and offers to buy you a drink','offers you a straight','tries to sell you car insurance','tries to catch you unawares','catches you unawares','interrupts your train of thought','starts talking to you','waves at you','assasinates you','hands you a flyer for a club-night','propositions you','reveals itself','becomes visible in the distance','announces its prescence with a deadly fart', 'farts loudly', 'coughs surreptiously', 'starts a riot', 'cracks a bottle of champagne', 'flees your approach', 'threatens your life', 'warns you to come no closer','sneaks up on you', 'embraces you passionately', 'tries to steal your purse', 'appears in a time machine']


const poke = () => { return pokeArr[Math.floor(Math.random() * pokeArr.length)]
}
const place = () => { return placeArr[Math.floor(Math.random() * placeArr.length)]
}
const pMod = () => { return placeModifier[Math.floor(Math.random() * placeModifier.length)]
}
const action  = () => { return actionArr[Math.floor(Math.random() * actionArr.length)]
}
const adj = () => { return adjArr[Math.floor(Math.random() * adjArr.length)]
}
const entrance = () => { return entranceArr[Math.floor(Math.random() * entranceArr.length)]
}
const sudd = () => { return suddArr[Math.floor(Math.random() * suddArr.length)]
}


const encounter = () => {return `You're ${action()} in ${pMod()} ${place()} when ${sudd()} ${adj()} ${poke()} ${entrance()}!`}


console.log(encounter())

console.log(placeModifier.length * placeArr.length * pokeArr.length * actionArr.length * adjArr.length * entranceArr.length )

let trigger = () => document.getElementById("result").innerHTML = encounter()



// <body>
//    <script> 
//       function fun() { 
//          document.getElementById("result").innerHTML = "The function fun() is triggered !"; 
//       } 
//    </script>
//    Calling js function using HTML button <br><br>
//    <button onclick = "fun()"> click me !</button> 
//    <p> 
//       <div id = "result"> </div> 
//    </p> 
// </body> 
